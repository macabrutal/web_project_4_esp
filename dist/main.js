!function(){"use strict";var e=document.querySelector(".cards"),t=document.getElementById("popupAddContainer"),n=document.getElementById("popupImage"),o=(document.querySelectorAll(".popup-container__close-popup"),"#card-template"),r=document.getElementById("addTitle"),i=document.getElementById("addImage"),l=document.getElementById("open-add-button"),a=document.querySelectorAll(".popup"),u={formSelector:".popup",inputSelector:".popup__input-popup",submitButtonSelector:".popup__button-popup",inactiveButtonClass:"popup__button-popup_inactive",inputErrorClass:".popup__input-popup_error",errorClass:".popup__error"},s=Array.from(document.querySelectorAll(".popup-container"));function c(e){e.classList.add("popup-container_show"),document.addEventListener("keydown",d),console.log("abro popup al clik en img")}function p(e){e.classList.remove("popup-container_show"),document.removeEventListener("keydown",p),console.log("cierro la modal ")}function d(e){console.log(e.key),"esc"!==e.key&&"Escape"!==e.key||s.forEach(p)}function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function _(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,r=function(e,t){if("object"!==m(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,t);if("object"!==m(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key,"string"),"symbol"===m(r)?r:String(r)),o)}var r}var f=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._cardSelector=n,this._name=t.name,this._link=t.link,this._openPopup=this.openPopup.bind(this)}var t,o;return t=e,(o=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".card__card-title").textContent=this._name,this._element.querySelector(".card__img-card").src=this._link,this._element}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".card__img-card").addEventListener("click",this._openPopup),this._element.querySelector(".card__card-like").addEventListener("click",(function(){e._toggleLikeButton()})),this._element.querySelector(".card__delete-button").addEventListener("click",(function(){e._deleteCard()}))}},{key:"openPopup",value:function(){c(n),n.querySelector(".image-container__image-popup").src=this._link,n.querySelector(".image-container__text-image").textContent=this._name}},{key:"_toggleLikeButton",value:function(){this._element.querySelector(".card__card-like").classList.toggle("card__card-like_active")}},{key:"_deleteCard",value:function(){this._element.querySelector(".card__delete-button").closest(".card").remove()}}])&&_(t.prototype,o),Object.defineProperty(t,"prototype",{writable:!1}),e}();function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function v(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,r=function(e,t){if("object"!==y(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,t);if("object"!==y(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key,"string"),"symbol"===y(r)?r:String(r)),o)}var r}var h=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=t,this._formSelector=n.formSelector,this._inputSelector=n.inputSelector,this._submitButtonSelector=n.submitButtonSelector,this._inactiveButtonClass=n.inactiveButtonClass,this._inputErrorClass=n.inputErrorClass,this._errorClass=n.errorClass}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){var e=this;this._formElement.querySelectorAll(this._inputSelector).forEach((function(){e._formElement.addEventListener("submit",(function(e){e.preventDefault()})),e._setEventListeners()}))}},{key:"_showInputError",value:function(e){var t=this._formElement.querySelector(".popup__error_".concat(e.name));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".popup__error_".concat(e.name));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}},{key:"_setEventListeners",value:function(){var e=this;this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),b=document.getElementById("open-edit-button"),g=document.getElementById("profilePopup"),E=document.getElementById("profileTitle"),S=document.getElementById("profileSubtitle"),k=document.querySelector(".profile__title"),L=document.querySelector(".profile__subtitle"),C=document.forms["edit-profile"];b.addEventListener("click",(function(){console.log("clic en botón edit"),E.value=k.textContent,S.value=L.textContent,c(g)})),[{name:"Valle de Yosemite",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lago Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Montañas Calvas",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Parque Nacional de la Vanoise",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}].forEach((function(t){var n=new f(t,o);e.prepend(n.generateCard())})),l.addEventListener("click",(function(){c(t)})),a.forEach((function(e){new h(e,u).enableValidation()})),a[1].addEventListener("submit",(function(n){n.preventDefault();var l=r.value,a=i.value,u=new f({name:l,link:a},o);e.prepend(u.generateCard()),n.target.reset(),p(t)})),s.forEach((function(e){e.addEventListener("mousedown",(function(t){t.target.classList.contains("popup-container_show")&&(console.log("mousedown fuera de modal"),p(t.target)),t.target.classList.contains("popup-container__close-popup")&&(console.log("cierro mousedown botón X"),p(e))}))})),C.addEventListener("submit",(function(e){e.preventDefault(),console.log("evento"),k.textContent=E.value,L.textContent=S.value,p(g)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,